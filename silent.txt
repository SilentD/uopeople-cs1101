Programming Assignment 
Do Exercise 6.4 from your textbook using recursion and the is_divisible function from Section 6.4. 
Your program may assume that both arguments to is_power are positive integers.
Note that the only positive integer that is a power of "1" is "1" itself.

After writing your is_power function, include the following test cases in your script to exercise the function and print the results:

print("is_power(10, 2) returns: ", is_power(10, 2))
print("is_power(27, 3) returns: ", is_power(27, 3))
print("is_power(1, 1) returns: ",  is_power(1, 1))
print("is_power(10, 1) returns: ", is_power(10, 1))
print("is_power(3, 3) returns: ", is_power(3, 3))

You should submit a script file and a plain text output file (.txt) that contains the test output. Multiple file uploads are permitted. Donâ€™t forget to include descriptive comments in your Python code.
Your submission will be assessed using the following Aspects.
1. Does the submission include the is_divisible function from Section 6.4 of the textbook?
2. Does the submission implement an is_power function that takes two arguments?
3. Does the is_power function call is_divisible ?
4. Does the is_power function call itself recursively?
5. Does the is_power function include code for the base case of the two arguments being equal?
6. Does the is_power function include code for the base case of the second argument being "1"?
7. Does the submission include correct output for the five test cases?


	
def is_power(x, y):
    # precondition
    assert x >= 0 
    assert y >= 0

    if (y == 1):
        return is_divisible(x, y)

    x = x * is_power(x, y - 1)
    return is_divisible(x, y)

def is_divisible(x, y):
    if x % y == 0:
        return True
    else:
        return False
		
print("is_power(10, 2) returns: ", is_power(10, 2))
print("is_power(27, 3) returns: ", is_power(27, 3))
print("is_power(1, 1) returns: ",  is_power(1, 1))
print("is_power(10, 1) returns: ", is_power(10, 1))
print("is_power(3, 3) returns: ", is_power(3, 3))

		